{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\nimport { ApiPrefixInterceptor } from './http/api-prefix.interceptor';\nimport { ErrorHandlerInterceptor } from './http/error-handler.interceptor';\nimport { RouteReusableStrategy } from './route-reusable-strategy';\nimport { HttpRequestService } from './http/http-request.service';\nimport { LocalStorageService } from './local.storage.service';\nimport * as i0 from \"@angular/core\";\nexport let CoreModule = /*#__PURE__*/(() => {\n  class CoreModule {\n    constructor(parentModule) {\n      // Import guard\n      if (parentModule) {\n        throw new Error(`${parentModule} has already been loaded. Import Core module in the AppModule only.`);\n      }\n    }\n\n  }\n\n  CoreModule.ɵfac = function CoreModule_Factory(t) {\n    return new (t || CoreModule)(i0.ɵɵinject(CoreModule, 12));\n  };\n\n  CoreModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: CoreModule\n  });\n  CoreModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [{\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiPrefixInterceptor,\n      multi: true\n    }, {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorHandlerInterceptor,\n      multi: true\n    }, {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy\n    }, HttpRequestService, LocalStorageService],\n    imports: [[CommonModule, HttpClientModule, RouterModule]]\n  });\n  return CoreModule;\n})();","map":null,"metadata":{},"sourceType":"module"}